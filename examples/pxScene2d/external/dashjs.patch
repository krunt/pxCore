diff -ruN dash.js-3.0.0-new/src/streaming/controllers/MediaSourceController.js dash.js-3.0.0/src/streaming/controllers/MediaSourceController.js
--- dash.js-3.0.0-new/src/streaming/controllers/MediaSourceController.js	2019-06-29 03:08:44.000000000 +0300
+++ dash.js-3.0.0/src/streaming/controllers/MediaSourceController.js	2019-08-24 01:54:41.517494966 +0300
@@ -48,7 +48,8 @@
         let hasMediaSource = ('MediaSource' in window);
 
         if (hasMediaSource) {
-            return new MediaSource();
+            //return new MediaSource();
+            return createMSEMediaSource();
         } else if (hasWebKit) {
             return new WebKitMediaSource();
         }
@@ -58,11 +59,13 @@
 
     function attachMediaSource(source, videoModel) {
 
-        let objectURL = window.URL.createObjectURL(source);
+        videoModel.setSource(source);
 
-        videoModel.setSource(objectURL);
+        //let objectURL = window.URL.createObjectURL(source);
 
-        return objectURL;
+        //videoModel.setSource(objectURL);
+
+        return '';
     }
 
     function detachMediaSource(videoModel) {
diff -ruN dash.js-3.0.0-new/src/streaming/controllers/StreamController.js dash.js-3.0.0/src/streaming/controllers/StreamController.js
--- dash.js-3.0.0-new/src/streaming/controllers/StreamController.js	2019-06-29 03:08:44.000000000 +0300
+++ dash.js-3.0.0/src/streaming/controllers/StreamController.js	2019-08-24 11:31:29.712621942 +0300
@@ -523,7 +523,7 @@
             if (!mediaSource) return;
 
             logger.debug('MediaSource is open!');
-            window.URL.revokeObjectURL(sourceUrl);
+            //window.URL.revokeObjectURL(sourceUrl);
             mediaSource.removeEventListener('sourceopen', onMediaSourceOpen);
             mediaSource.removeEventListener('webkitsourceopen', onMediaSourceOpen);
             setMediaDuration();
diff -ruN dash.js-3.0.0-new/src/streaming/models/VideoModel.js dash.js-3.0.0/src/streaming/models/VideoModel.js
--- dash.js-3.0.0-new/src/streaming/models/VideoModel.js	2019-06-29 03:08:44.000000000 +0300
+++ dash.js-3.0.0/src/streaming/models/VideoModel.js	2019-08-24 01:57:15.212235068 +0300
@@ -153,11 +153,18 @@
     function setSource(source) {
         if (element) {
             if (source) {
+                element.attachMediaSource(source);
+            } else {
+                element.detachMediaSource();
+            }
+            /*
+            if (source) {
                 element.src = source;
             } else {
                 element.removeAttribute('src');
                 element.load();
             }
+            */
         }
     }
 
diff -ruN dash.js-3.0.0-new/src/streaming/net/HTTPLoader.js dash.js-3.0.0/src/streaming/net/HTTPLoader.js
--- dash.js-3.0.0-new/src/streaming/net/HTTPLoader.js	2019-06-29 03:08:44.000000000 +0300
+++ dash.js-3.0.0/src/streaming/net/HTTPLoader.js	2019-08-24 13:12:29.419111599 +0300
@@ -182,7 +182,7 @@
                 handleLoaded(true);
 
                 if (config.success) {
-                    config.success(httpRequest.response.response, httpRequest.response.statusText, httpRequest.response.responseURL);
+                    config.success(request.responseType === 'arraybuffer' ? httpRequest.response.response : httpRequest.response.responseText, httpRequest.response.statusText, httpRequest.response.responseURL);
                 }
 
                 if (config.complete) {
diff -ruN dash.js-3.0.0-new/src/streaming/utils/Capabilities.js dash.js-3.0.0/src/streaming/utils/Capabilities.js
--- dash.js-3.0.0-new/src/streaming/utils/Capabilities.js	2019-06-29 03:08:44.000000000 +0300
+++ dash.js-3.0.0/src/streaming/utils/Capabilities.js	2019-08-24 11:41:38.715057221 +0300
@@ -61,7 +61,7 @@
     }
 
     function supportsCodec(codec) {
-        if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {
+        if ('MediaSource' in window && createMSEMediaSource().isTypeSupported(codec)) {
             return true;
         }
 
@@ -84,4 +84,4 @@
     return instance;
 }
 Capabilities.__dashjs_factory_name = 'Capabilities';
-export default FactoryMaker.getSingletonFactory(Capabilities);
\ No newline at end of file
+export default FactoryMaker.getSingletonFactory(Capabilities);
